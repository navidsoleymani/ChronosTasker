# Generated by Django 5.2.4 on 2025-07-12 03:04

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0003_delete_jobexecutionlog'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='scheduledjob',
            name='error_message',
            field=models.TextField(blank=True, null=True, verbose_name='Error Message'),
        ),
        migrations.AddField(
            model_name='scheduledjob',
            name='result',
            field=models.TextField(blank=True, null=True, verbose_name='Result'),
        ),
        migrations.CreateModel(
            name='HistoricalScheduledJob',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Optional text description for understanding the job purpose.', null=True, verbose_name='Description')),
                ('task_path', models.CharField(help_text='Import path of the Celery task (e.g., scheduler.tasks.send_email_task)', max_length=255, verbose_name='Task Path')),
                ('args', models.JSONField(blank=True, help_text='List of positional args for the task', null=True, verbose_name='*args')),
                ('kwargs', models.JSONField(blank=True, help_text='Dict of keyword args for the task', null=True, verbose_name='**kwargs')),
                ('one_off_run_time', models.DateTimeField(blank=True, help_text='If set, task will run once at this datetime (UTC)', null=True, verbose_name='One Off Run Time')),
                ('cron_expression', models.CharField(blank=True, help_text='Optional: If set, task will run periodically', max_length=100, null=True, verbose_name='Cron Expression')),
                ('end_time', models.DateTimeField(blank=True, help_text='If set, no executions will be scheduled after this datetime (UTC).', null=True, verbose_name='End Time')),
                ('max_retries', models.PositiveIntegerField(default=0, help_text='Maximum retry attempts if the task execution fails.', verbose_name='Max Retries')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('scheduled', 'Scheduled'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20, verbose_name='Status')),
                ('last_run_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Run At')),
                ('next_run_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Next Run At')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('result', models.TextField(blank=True, null=True, verbose_name='Result')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Scheduled Job',
                'verbose_name_plural': 'historical Scheduled Jobs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
